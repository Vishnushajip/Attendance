{
    "sourceFile": "lib/Models/AttendanceModel.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1741784935222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741796576071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n+import 'package:cloud_firestore/cloud_firestore.dart';\r\n+\r\n class AttendanceViewModel {\r\n   final FirebaseFirestore _firestore;\r\n   AttendanceViewModel(this._firestore);\r\n \r\n   Future<void> markAttendance(String email) async {\r\n     await _firestore.collection(\"attendance\").add({\r\n       \"email\": email,\r\n-      \"date\": DateTime.now().toIso8601String(),\r\n+      \"date\": DateTime.now().toIso8601String(), Fluttertoast.showToast(msg: \"Attendance marked successfully!\");\r\n     });\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741796599529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,99 @@\n-import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n+import '../Models/LoginModel.dart';\r\n \r\n-class AttendanceViewModel {\r\n-  final FirebaseFirestore _firestore;\r\n-  AttendanceViewModel(this._firestore);\r\n+// 🔹 Provider to track loading state\r\n+final loadingProvider = StateProvider<bool>((ref) => false);\r\n \r\n-  Future<void> markAttendance(String email) async {\r\n-    await _firestore.collection(\"attendance\").add({\r\n\\ No newline at end of file\n-      \"email\": email,\r\n-      \"date\": DateTime.now().toIso8601String(), Fluttertoast.showToast(msg: \"Attendance marked successfully!\");\r\n-    });\r\n+class LoginScreen extends ConsumerWidget {\r\n+  LoginScreen({super.key});\r\n+\r\n+  final TextEditingController emailController = TextEditingController();\r\n+  final TextEditingController passwordController = TextEditingController();\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context, WidgetRef ref) {\r\n+    final firestore = ref.read(firestoreProvider);\r\n+    final loginViewModel = LoginViewModel(firestore, ref);\r\n+    final user = ref.watch(userProvider);\r\n+    final isLoading = ref.watch(loadingProvider); // Watch loading state\r\n+\r\n+    return Scaffold(\r\n+      appBar: AppBar(title: Text(user != null ? \"Welcome, $user\" : \"Login\")),\r\n+      body: Padding(\r\n+        padding: const EdgeInsets.all(16.0),\r\n+        child: Center(\r\n+          child: Container(\r\n+            width: 350,\r\n+            height: 250,\r\n+            padding: const EdgeInsets.all(20),\r\n+            decoration: BoxDecoration(\r\n+              color: Colors.white,\r\n+              borderRadius: BorderRadius.circular(12),\r\n+              boxShadow: [\r\n+                BoxShadow(\r\n+                  color: Colors.black26,\r\n+                  blurRadius: 10,\r\n+                  spreadRadius: 2,\r\n+                  offset: Offset(0, 5),\r\n+                ),\r\n+              ],\r\n+            ),\r\n+            child: Column(\r\n+              mainAxisSize: MainAxisSize.min,\r\n+              children: [\r\n+                TextField(\r\n+                  controller: emailController,\r\n+                  decoration: InputDecoration(labelText: \"Email\"),\r\n+                ),\r\n+                TextField(\r\n+                  controller: passwordController,\r\n+                  decoration: InputDecoration(labelText: \"Password\"),\r\n+                  obscureText: true,\r\n+                ),\r\n+                SizedBox(height: 20),\r\n+\r\n+                // 🔹 Show CircularProgressIndicator when loading\r\n+                isLoading\r\n+                    ? CircularProgressIndicator()\r\n+                    : ElevatedButton(\r\n+                        style: ElevatedButton.styleFrom(\r\n+                          backgroundColor: Colors.blue,\r\n+                          shape: RoundedRectangleBorder(\r\n+                            borderRadius: BorderRadius.circular(8),\r\n+                          ),\r\n+                          elevation: 5,\r\n+                          padding: EdgeInsets.symmetric(\r\n+                              vertical: 12, horizontal: 12),\r\n+                        ),\r\n+                        onPressed: () async {\r\n+                          ref.read(loadingProvider.notifier).state = true; // Start loading\r\n+                          bool success = await loginViewModel.registerUser(\r\n+                            context,\r\n+                            emailController.text.trim(),\r\n+                            passwordController.text.trim(),\r\n+                          );\r\n+                          ref.read(loadingProvider.notifier).state = false; // Stop loading\r\n+\r\n+                          // Navigate only if registration is successful\r\n+                          if (success) {\r\n+                            Navigator.of(context).pushReplacement(\r\n+                              MaterialPageRoute(\r\n+                                  builder: (context) => AttendanceScreen()),\r\n+                            );\r\n+                          }\r\n+                        },\r\n+                        child: Text(\r\n+                          \"Register\",\r\n+                          style: TextStyle(\r\n+                              fontWeight: FontWeight.bold, color: Colors.white),\r\n+                        ),\r\n+                      ),\r\n+              ],\r\n+            ),\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1741796678582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,99 +1,23 @@\n-import 'package:flutter/material.dart';\r\n-import 'package:flutter_riverpod/flutter_riverpod.dart';\r\n-import '../Models/LoginModel.dart';\r\n+import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:fluttertoast/fluttertoast.dart';\r\n \r\n-// 🔹 Provider to track loading state\r\n-final loadingProvider = StateProvider<bool>((ref) => false);\r\n+class AttendanceViewModel {\r\n+  final FirebaseFirestore _firestore;\r\n \r\n-class LoginScreen extends ConsumerWidget {\r\n-  LoginScreen({super.key});\r\n+  AttendanceViewModel(this._firestore);\r\n \r\n-  final TextEditingController emailController = TextEditingController();\r\n-  final TextEditingController passwordController = TextEditingController();\r\n+  Future<void> markAttendance(String email) async {\r\n+    try {\r\n+      await _firestore.collection(\"attendance\").add({\r\n+        \"email\": email, // Store user's email for reference\r\n+        \"date\": DateTime.now().toIso8601String(),\r\n+      });\r\n \r\n-  @override\r\n-  Widget build(BuildContext context, WidgetRef ref) {\r\n-    final firestore = ref.read(firestoreProvider);\r\n-    final loginViewModel = LoginViewModel(firestore, ref);\r\n-    final user = ref.watch(userProvider);\r\n-    final isLoading = ref.watch(loadingProvider); // Watch loading state\r\n-\r\n-    return Scaffold(\r\n-      appBar: AppBar(title: Text(user != null ? \"Welcome, $user\" : \"Login\")),\r\n-      body: Padding(\r\n-        padding: const EdgeInsets.all(16.0),\r\n-        child: Center(\r\n-          child: Container(\r\n-            width: 350,\r\n-            height: 250,\r\n-            padding: const EdgeInsets.all(20),\r\n-            decoration: BoxDecoration(\r\n-              color: Colors.white,\r\n-              borderRadius: BorderRadius.circular(12),\r\n-              boxShadow: [\r\n-                BoxShadow(\r\n-                  color: Colors.black26,\r\n-                  blurRadius: 10,\r\n-                  spreadRadius: 2,\r\n-                  offset: Offset(0, 5),\r\n-                ),\r\n-              ],\r\n-            ),\r\n-            child: Column(\r\n-              mainAxisSize: MainAxisSize.min,\r\n-              children: [\r\n-                TextField(\r\n-                  controller: emailController,\r\n-                  decoration: InputDecoration(labelText: \"Email\"),\r\n-                ),\r\n-                TextField(\r\n-                  controller: passwordController,\r\n-                  decoration: InputDecoration(labelText: \"Password\"),\r\n-                  obscureText: true,\r\n-                ),\r\n-                SizedBox(height: 20),\r\n-\r\n-                // 🔹 Show CircularProgressIndicator when loading\r\n-                isLoading\r\n-                    ? CircularProgressIndicator()\r\n-                    : ElevatedButton(\r\n-                        style: ElevatedButton.styleFrom(\r\n-                          backgroundColor: Colors.blue,\r\n-                          shape: RoundedRectangleBorder(\r\n-                            borderRadius: BorderRadius.circular(8),\r\n-                          ),\r\n-                          elevation: 5,\r\n-                          padding: EdgeInsets.symmetric(\r\n-                              vertical: 12, horizontal: 12),\r\n-                        ),\r\n-                        onPressed: () async {\r\n-                          ref.read(loadingProvider.notifier).state = true; // Start loading\r\n-                          bool success = await loginViewModel.registerUser(\r\n-                            context,\r\n-                            emailController.text.trim(),\r\n-                            passwordController.text.trim(),\r\n-                          );\r\n-                          ref.read(loadingProvider.notifier).state = false; // Stop loading\r\n-\r\n-                          // Navigate only if registration is successful\r\n-                          if (success) {\r\n-                            Navigator.of(context).pushReplacement(\r\n-                              MaterialPageRoute(\r\n-                                  builder: (context) => AttendanceScreen()),\r\n-                            );\r\n-                          }\r\n-                        },\r\n-                        child: Text(\r\n-                          \"Register\",\r\n-                          style: TextStyle(\r\n-                              fontWeight: FontWeight.bold, color: Colors.white),\r\n-                        ),\r\n-                      ),\r\n-              ],\r\n-            ),\r\n-          ),\r\n-        ),\r\n-      ),\r\n-    );\r\n+      // Show success toast\r\n+      Fluttertoast.showToast(msg: \"✅ Attendance marked successfully!\");\r\n+    } catch (e) {\r\n+      // Show error toast if Firestore operation fails\r\n+      Fluttertoast.showToast(msg: \"❌ Error marking attendance: ${e.toString()}\");\r\n+    }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1741796685081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,8 @@\n       // Show success toast\r\n       Fluttertoast.showToast(msg: \"✅ Attendance marked successfully!\");\r\n     } catch (e) {\r\n       // Show error toast if Firestore operation fails\r\n-      Fluttertoast.showToast(msg: \"❌ Error marking attendance: ${e.toString()}\");\r\n+      Fluttertoast.showToast(msg: \"Error marking attendance: ${e.toString()}\");\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1741796692957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,10 @@\n       await _firestore.collection(\"attendance\").add({\r\n         \"email\": email, // Store user's email for reference\r\n         \"date\": DateTime.now().toIso8601String(),\r\n       });\r\n-\r\n-      // Show success toast\r\n-      Fluttertoast.showToast(msg: \"✅ Attendance marked successfully!\");\r\n+      Fluttertoast.showToast(msg: \"Attendance marked successfully!\");\r\n     } catch (e) {\r\n-      // Show error toast if Firestore operation fails\r\n       Fluttertoast.showToast(msg: \"Error marking attendance: ${e.toString()}\");\r\n     }\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1741784935222,
            "name": "Commit-0",
            "content": "class AttendanceViewModel {\r\n  final FirebaseFirestore _firestore;\r\n  AttendanceViewModel(this._firestore);\r\n\r\n  Future<void> markAttendance(String email) async {\r\n    await _firestore.collection(\"attendance\").add({\r\n      \"email\": email,\r\n      \"date\": DateTime.now().toIso8601String(),\r\n    });\r\n  }\r\n}"
        }
    ]
}